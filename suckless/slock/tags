!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mina/repos/dotfiles/src/slock/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
${OBJ}	Makefile	/^${OBJ}: config.h config.mk arg.h util.h$/;"	t
.c.o	Makefile	/^.c.o:$/;"	t
ARGBEGIN	arg.h	/^#define ARGBEGIN	/;"	d
ARGC	arg.h	/^#define ARGC(/;"	d
ARGEND	arg.h	/^#define ARGEND	/;"	d
ARGF	arg.h	/^#define ARGF(/;"	d
ARGNUM	arg.h	/^#define ARGNUM	/;"	d
ARGNUMF	arg.h	/^#define ARGNUMF(/;"	d
ARG_H__	arg.h	/^#define ARG_H__$/;"	d
CC	config.mk	/^CC = cc$/;"	m
CFLAGS	config.mk	/^CFLAGS = -std=c99 -pedantic -Wall -Os ${INCS} ${CPPFLAGS}$/;"	m
COMPATSRC	config.mk	/^COMPATSRC = explicit_bzero.c$/;"	m
CPPFLAGS	config.mk	/^CPPFLAGS = -DVERSION=\\"${VERSION}\\" -D_DEFAULT_SOURCE -DHAVE_SHADOW_H$/;"	m
CUSTOMIZATION	slock.1	/^.Sh CUSTOMIZATION$/;"	s
DESCRIPTION	slock.1	/^.Sh DESCRIPTION$/;"	s
EARGF	arg.h	/^#define EARGF(/;"	d
EXAMPLES	slock.1	/^.Sh EXAMPLES$/;"	s
FAILED	slock.c	/^	FAILED,$/;"	e	enum:__anon9c26c2f20103	file:
INCS	config.mk	/^INCS = -I. -I\/usr\/include -I${X11INC}$/;"	m
INIT	slock.c	/^	INIT,$/;"	e	enum:__anon9c26c2f20103	file:
INPUT	slock.c	/^	INPUT,$/;"	e	enum:__anon9c26c2f20103	file:
LDFLAGS	config.mk	/^LDFLAGS = -s ${LIBS}$/;"	m
LIBS	config.mk	/^LIBS = -L\/usr\/lib -lc -lcrypt -L${X11LIB} -lX11 -lXext -lXrandr$/;"	m
LNGARG	arg.h	/^#define LNGARG(/;"	d
MANPREFIX	config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
NAME	slock.1	/^.Sh NAME$/;"	s
NUMCOLS	slock.c	/^	NUMCOLS$/;"	e	enum:__anon9c26c2f20103	file:
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OPTIONS	slock.1	/^.Sh OPTIONS$/;"	s
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
SECURITY CONSIDERATIONS	slock.1	/^.Sh SECURITY CONSIDERATIONS$/;"	s
SRC	Makefile	/^SRC = slock.c ${COMPATSRC}$/;"	m
SYNOPSIS	slock.1	/^.Sh SYNOPSIS$/;"	s
VERSION	config.mk	/^VERSION = 1.5$/;"	m
X11INC	config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
_XOPEN_SOURCE	slock.c	/^#define _XOPEN_SOURCE /;"	d	file:
__anon9c26c2f20103	slock.c	/^enum {$/;"	g	file:
__explicit_bzero_hook	explicit_bzero.c	/^__explicit_bzero_hook(void *buf, size_t len)$/;"	f	typeref:typename:void
active	slock.c	/^	int active;$/;"	m	struct:xrandr	typeref:typename:int	file:
all	Makefile	/^all: options slock$/;"	t
argv0	slock.c	/^char *argv0;$/;"	v	typeref:typename:char *
clean	Makefile	/^clean:$/;"	t
colorname	config.def.h	/^static const char *colorname[NUMCOLS] = {$/;"	v	typeref:typename:const char * []
colorname	config.h	/^static const char *colorname[NUMCOLS] = {$/;"	v	typeref:typename:const char * []
colors	slock.c	/^	unsigned long colors[NUMCOLS];$/;"	m	struct:lock	typeref:typename:unsigned long[]	file:
config.h	Makefile	/^config.h:$/;"	t
die	slock.c	/^die(const char *errstr, ...)$/;"	f	typeref:typename:void	file:
dist	Makefile	/^dist: clean$/;"	t
dontkillme	slock.c	/^dontkillme(void)$/;"	f	typeref:typename:void	file:
errbase	slock.c	/^	int errbase;$/;"	m	struct:xrandr	typeref:typename:int	file:
evbase	slock.c	/^	int evbase;$/;"	m	struct:xrandr	typeref:typename:int	file:
explicit_bzero	explicit_bzero.c	/^explicit_bzero(void *buf, size_t len)$/;"	f	typeref:typename:void
failonclear	config.def.h	/^static const int failonclear = 1;$/;"	v	typeref:typename:const int
failonclear	config.h	/^static const int failonclear = 1;$/;"	v	typeref:typename:const int
gethash	slock.c	/^gethash(void)$/;"	f	typeref:typename:const char *	file:
group	config.def.h	/^static const char *group = "mina";$/;"	v	typeref:typename:const char *
group	config.h	/^static const char *group = "mina";$/;"	v	typeref:typename:const char *
install	Makefile	/^install: all$/;"	t
lock	slock.c	/^struct lock {$/;"	s	file:
lockscreen	slock.c	/^lockscreen(Display *dpy, struct xrandr *rr, int screen)$/;"	f	typeref:struct:lock *	file:
main	slock.c	/^main(int argc, char **argv) {$/;"	f	typeref:typename:int
options	Makefile	/^options:$/;"	t
pmap	slock.c	/^	Pixmap pmap;$/;"	m	struct:lock	typeref:typename:Pixmap	file:
readpw	slock.c	/^readpw(Display *dpy, struct xrandr *rr, struct lock **locks, int nscreens,$/;"	f	typeref:typename:void	file:
root	slock.c	/^	Window root, win;$/;"	m	struct:lock	typeref:typename:Window	file:
screen	slock.c	/^	int screen;$/;"	m	struct:lock	typeref:typename:int	file:
slock	Makefile	/^slock: ${OBJ}$/;"	t
uninstall	Makefile	/^uninstall:$/;"	t
usage	slock.c	/^usage(void)$/;"	f	typeref:typename:void	file:
user	config.def.h	/^static const char *user  = "mina";$/;"	v	typeref:typename:const char *
user	config.h	/^static const char *user  = "mina";$/;"	v	typeref:typename:const char *
win	slock.c	/^	Window root, win;$/;"	m	struct:lock	typeref:typename:Window	file:
xrandr	slock.c	/^struct xrandr {$/;"	s	file:
